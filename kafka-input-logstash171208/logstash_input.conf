input {
    kafka {
        bootstrap_servers => "SASL_SSL://kafka-ons-internet.aliyun.com:8080"
        topics => ["xxx"]

        security_protocol => "SASL_SSL"
        sasl_mechanism => "ONS"

        jaas_path => "/etc/logstash/keys/jaas.conf"

        ssl_truststore_password => "KafkaOnsClient"
        ssl_truststore_location => "/etc/logstash/keys/kafka.client.truststore.jks"

        group_id => "gid"
        consumer_threads => 1
        decorate_events => true
        codec => json {
            charset => "UTF-8"
        }
    }

     kafka{
        bootstrap_servers => "10.0.0.231:9092"
        topics => ["xxx"]
        group_id => "gid"
        consumer_threads => 1
        decorate_events => true
        type => "bolu"
        codec => json {
            charset => "UTF-8"
        }
    }
}

filter {

    mutate {
        remove_field => kafka
        remove_field => version
        remove_field => beat
        remove_field => input_type
        remove_field => offset
        add_field => {"logtype"=>"%{[tags][0]}"}
        add_field => {"gssid"=>"%{[tags][1]}"}
    }

    if [logtype] == 'bolu' {
        grok {
            match => ["source","%{DATA:letter}:%{DATA:dirs}%{USERNAME:filenames}[.](?<extname>(?:(log|csv)))"]
            #remove_field => others

        }
        
        mutate {
            gsub => ["dirs","[\\]","/"]
        }

        ruby {
            code => "event.set('filenameschange', event.get('[filenames]').split('-')[1].concat('-').concat(event.get('[filenames]').split('-')[2]))"
        }
    }

    if [logtype] == 'texas' {
        grok {
            match => ["source","%{DATA:dirs}%{USERNAME:filenames}[.](?<extname>(?:(log|csv)))"]
            #remove_field => others
        }
        
        ruby {
            code => " event.set('filenameschange',
                if event.get('[filenames]').split('-')[event.get('[filenames]').split('-').size-1].to_i > 20000000
                    event.get('[filenames]').split('-')[event.get('[filenames]').split('-').size-1][0,6].insert(4,'-')
                else
                    'log'
                end
            ) "
        }

    }

    ruby {
        code => "event.set('dirschange', event.get('[dirs]').split('/')[event.get('[dirs]').split('/').size-1])"
    }
}

output {
    file {
        path => "/export/%{logtype}/%{gssid}/%{dirschange}/%{filenames}.%{extname}"
        codec => line {
            format => "%{message}"
            charset => "UTF-8"
        }
        flush_interval => 0
    }

    file {
        path => "/gamelog/%{logtype}/%{gssid}/%{filenameschange}/%{filenames}.%{extname}"
        codec => line {
            format => "%{message}"
            charset => "UTF-8"
        }
        flush_interval => 0
    }

    if [logtype] == "texas"{
        kafka {
            workers => 1
            bootstrap_servers => "kafka01:9092,kafka02:9092,kafka03:9092"
            topic_id => "texasdata"
            codec => json {
                charset => "UTF-8"
            }
        }
    }

    #stdout {
    #    codec => rubydebug
    #}
}
